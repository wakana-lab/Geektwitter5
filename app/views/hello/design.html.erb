<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>スクロールアニメーションのサンプル</title>
<style>
  /* 全体の設定 */
  body {
    font-family: sans-serif;
    line-height: 1.8;
  }
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
  }
  .spacer {
    height: 100vh; /* スクロール領域を作るためのスペーサー */
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f0f0f0;
  }

  /*
   * アニメーションのCSS
   */
  .fade-in {
    opacity: 0; /* 初期状態は透明 */
    transform: translateY(20px); /* 少し下にずらす */
    transition: opacity 0.8s, transform 0.8s; /* 0.8秒かけて変化させる */
  }

  .fade-in.is-visible {
    opacity: 1; /* 画面に入ったら不透明に */
    transform: translateY(0); /* 元の位置に戻す */
  }
</style>
</head>
<body>

<div class="container">
  <div class="spacer">
    <h1>下にスクロールしてください</h1>
  </div>

  <h2>コンテンツ1</h2>
  <p class="fade-in">この要素は、画面に入ると下からフワッと表示されます。</p>
  <p class="fade-in">テキストだけでなく、画像やセクション全体にも適用できます。</p>

  <div class="spacer"></div>

  <h2>コンテンツ2</h2>
  <img src="https://via.placeholder.com/400x200" alt="ダミー画像" class="fade-in">
  <p class="fade-in">この画像も同じようにアニメーションします。</p>

  <div class="spacer"></div>

</div>

<script>
  // Intersection Observerの設定
  const targets = document.querySelectorAll('.fade-in'); // アニメーションさせたい要素を取得

  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {
      // 要素が画面内に入った場合
      if (entry.isIntersecting) {
        entry.target.classList.add('is-visible'); // is-visibleクラスを付与
        observer.unobserve(entry.target); // 監視を停止（一回だけアニメーションさせる場合）
      }
    });
  });

  // 各要素の監視を開始
  targets.forEach(target => {
    observer.observe(target);
  });
</script>

</body>
</html>